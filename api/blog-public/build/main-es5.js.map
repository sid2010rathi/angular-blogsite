{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/blog.service.ts","webpack:///src/app/components/blog-add-comments/blog-add-comments.component.ts","webpack:///src/app/components/blog-add-comments/blog-add-comments.component.html","webpack:///src/app/components/blog-create/blog-create.component.ts","webpack:///src/app/components/blog-create/blog-create.component.html","webpack:///src/app/components/blog-details/blog-details.component.ts","webpack:///src/app/components/blog-details/blog-details.component.html","webpack:///src/app/components/blog-favourites/blog-favourites.component.ts","webpack:///src/app/components/blog-favourites/blog-favourites.component.html","webpack:///src/app/components/blog-list/blog-list.component.ts","webpack:///src/app/components/blog-list/blog-list.component.html","webpack:///src/app/components/blog-update/blog-update.component.ts","webpack:///src/app/components/blog-update/blog-update.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/framework/framework.component.ts","webpack:///src/app/components/framework/framework.component.html","webpack:///src/app/components/index/index.component.ts","webpack:///src/app/components/index/index.component.html","webpack:///src/app/components/log-in/log-in.component.ts","webpack:///src/app/components/log-in/log-in.component.html","webpack:///src/app/components/nav/nav.component.ts","webpack:///src/app/components/nav/nav.component.html","webpack:///src/app/components/register-page/register-page.component.ts","webpack:///src/app/components/register-page/register-page.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/components/update-profile/update-profile.component.ts","webpack:///src/app/components/update-profile/update-profile.component.html","webpack:///src/app/global.ts","webpack:///src/app/models/blog.ts","webpack:///src/app/search.pipe.ts","webpack:///src/app/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","pathMatch","redirectTo","AppRoutingModule","forRoot","imports","AppModule","provide","useValue","declarations","providers","bootstrap","AuthGuard","authService","router","next","state","isLoggedIn","pipe","navigate","providedIn","AuthService","userService","loggedIn","tokenAvailable","localStorage","getItem","newUser","login","res","status","setItem","data","token","error","removeItem","reject","getUser","user","_id","asObservable","BlogService","http","get","toPromise","response","handleError","blogId","newBlog","post","put","comment","userid","blogid","console","log","BlogAddCommentsComponent","selector","templateUrl","styleUrls","BlogCreateComponent","blogservice","createBlog","author","name","images","formError","formIsValid","onReviewSubmit","BlogDetailsComponent","blogService","route","params","getSingleBlog","subscribe","date","Date","postComment","newComment","comments","push","toString","description","deleteBlog","updateBlog","BlogFavouritesComponent","blogs","getFavouriteBlogs","message","getCurrentUserId","userId","getFavourites","showError","BlogListComponent","isLoggedIn$","getBlogs","updatedBlogs","favBlogs","i","length","k","favourites","err","addToFavourites","alert","navigateByUrl","skipLocationChange","BlogUpdateComponent","blog","FooterComponent","FrameworkComponent","renderer","location","document","isCollapsed","pagination","pagination1","element","window","pageYOffset","getElementById","classList","remove","add","onWindowScroll","event","body","getElementsByTagName","IndexComponent","getUserinfo","LogInComponent","email","password","onLogin","NavComponent","getSingleUser","username","logout","RegisterPageComponent","registerUser","onRegister","SearchComponent","UpdateProfileComponent","snapshot","paramMap","dob","address","city","province","zipcode","phone","image","getCurrentUser","updateUser","onUpdate","BASEURL","API_BASE_URL","BLOGS_URL","USERS_URL","Blog","SearchPipe","value","input","toLowerCase","filter","el","indexOf","UserService","url","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BlogAddCommentsComponent } from './components/blog-add-comments/blog-add-comments.component';\r\nimport { BlogFavouritesComponent } from './components/blog-favourites/blog-favourites.component';\r\nimport { BlogListComponent } from './components/blog-list/blog-list.component';\r\nimport { BlogDetailsComponent } from './components/blog-details/blog-details.component';\r\n\r\nimport {BlogCreateComponent} from './components/blog-create/blog-create.component';\r\nimport { BlogUpdateComponent } from './components/blog-update/blog-update.component';\r\n\r\nimport { IndexComponent } from \"./components/index/index.component\";\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  //user\r\n  { path: '', component: IndexComponent},\r\n  { path: 'register', component: RegisterPageComponent },\r\n  { path: 'update/:userid', component: UpdateProfileComponent, canActivate: [AuthGuard]  },\r\n  { path: 'login', component: LogInComponent },\r\n  \r\n  //blog\r\n  { path: 'blogs', component: BlogListComponent},\r\n  { path: 'blogs/favourites', component: BlogFavouritesComponent, canActivate: [AuthGuard] },\r\n  { path: 'blogs/:blogid/comments/new', component: BlogAddCommentsComponent, canActivate: [AuthGuard] },\r\n  { path: 'update-blog/:blogid', component: BlogUpdateComponent, canActivate: [AuthGuard] },\r\n  { path: 'blogs/new', component: BlogCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'blogs/:blogid', component: BlogDetailsComponent},\r\n  // { path: 'blogs/edit/:blogid', component: BlogCreateComponent },\r\n\r\n  { path: '**', pathMatch: 'full', redirectTo: '/' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { APP_BASE_HREF} from '@angular/common';\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\r\nimport { ProgressbarModule } from \"ngx-bootstrap/progressbar\";\r\nimport { TooltipModule } from \"ngx-bootstrap/tooltip\";\r\nimport { CollapseModule } from \"ngx-bootstrap/collapse\";\r\nimport { TabsModule } from \"ngx-bootstrap/tabs\";\r\nimport { PaginationModule } from \"ngx-bootstrap/pagination\";\r\nimport { AlertModule } from \"ngx-bootstrap/alert\";\r\nimport { BsDatepickerModule } from \"ngx-bootstrap/datepicker\";\r\nimport { CarouselModule } from \"ngx-bootstrap/carousel\";\r\nimport { ModalModule } from \"ngx-bootstrap/modal\";\r\nimport { JwBootstrapSwitchNg2Module } from \"jw-bootstrap-switch-ng2\";\r\nimport { PopoverModule } from \"ngx-bootstrap/popover\";\r\n\r\nimport { IndexComponent } from \"./components/index/index.component\";\r\nimport { NavComponent } from './components/nav/nav.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { FrameworkComponent } from './components/framework/framework.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BlogListComponent } from './components/blog-list/blog-list.component';\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { UserService } from './user.service';\r\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\r\nimport { LogInComponent } from './components/log-in/log-in.component';\r\nimport { BlogFavouritesComponent } from './components/blog-favourites/blog-favourites.component';\r\nimport { BlogAddCommentsComponent } from './components/blog-add-comments/blog-add-comments.component';\r\nimport { SearchPipe } from './search.pipe';\r\nimport { BlogCreateComponent } from './components/blog-create/blog-create.component';\r\nimport { BlogUpdateComponent } from './components/blog-update/blog-update.component';\r\nimport { BlogDetailsComponent } from './components/blog-details/blog-details.component';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FrameworkComponent,\r\n    IndexComponent,\r\n    NavComponent,\r\n    FooterComponent,\r\n    SearchComponent,\r\n    BlogListComponent,\r\n    RegisterPageComponent,\r\n    UpdateProfileComponent,\r\n    LogInComponent,\r\n    BlogFavouritesComponent,\r\n    BlogAddCommentsComponent,\r\n    SearchPipe,\r\n    BlogCreateComponent,\r\n    BlogUpdateComponent,\r\n    BlogDetailsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    BsDropdownModule.forRoot(),\r\n    ProgressbarModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    PopoverModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    JwBootstrapSwitchNg2Module,\r\n    TabsModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    AlertModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    CarouselModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_BASE_HREF,\r\n      useValue: '/'\r\n    },\r\n    // UserService,\r\n    AuthService, \r\n    AuthGuard\r\n  ],\r\n  bootstrap: [FrameworkComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.authService.isLoggedIn\r\n      .pipe(\r\n        take(1),\r\n        map((isLoggedIn: boolean) => {\r\n          if (!isLoggedIn) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n      )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Users } from '../models/users';\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  // private loggedIn = new BehaviorSubject<boolean>(false);\r\n  private loggedIn = new BehaviorSubject<boolean>(this.tokenAvailable());\r\n\r\n  get isLoggedIn() {\r\n    return this.loggedIn.asObservable();\r\n  }\r\n\r\n  private tokenAvailable(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  login(newUser: Users): String {\r\n    this.userService.login(newUser)\r\n      .then((res: any) => {\r\n        if (res) {\r\n          if (res.status === \"ok\") {\r\n            localStorage.setItem('token', res.data.token);\r\n            this.loggedIn.next(true);\r\n            this.router.navigate([`/`]);\r\n          } else if (res.status === \"error\") {\r\n            return res.error;\r\n          }\r\n        } else {\r\n          return 'Ops, something went wrong. Please, try later!';\r\n        }\r\n      });\r\n    return null;\r\n  }\r\n\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // get current logged in user id\r\n  getCurrentUserId() {\r\n    return new Promise((resolve, reject) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        this.userService.getUser(token)\r\n          .then((user: any) => {\r\n            if (user) {\r\n              resolve(user.data._id);\r\n            }\r\n          })\r\n          .catch((res) => {\r\n            reject(res);\r\n            return;\r\n          })\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Blog } from './models/blog';\r\n\r\nimport { BLOGS_URL, USERS_URL } from './global';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  getBlogs() {\r\n    return this.http.get(BLOGS_URL)\r\n    .toPromise()\r\n    .then((response: Blog[]) =>  response)\r\n    .catch(this.handleError);\r\n  }\r\n\r\n  getSingleBlog(blogId: string): Promise<void | Blog> {\r\n    return this.http.get(BLOGS_URL + '/' + blogId)\r\n      .toPromise()\r\n      .then(res => res as Blog)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  createBlog(newBlog: Blog): Promise<void | Blog> {\r\n    return this.http.post(BLOGS_URL, newBlog)\r\n      .toPromise()\r\n      .then(response => response as Blog)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  updateBlog(blogId: string, newBlog: Blog): Promise<void | Blog> {\r\n    return this.http.put(BLOGS_URL + '/' + blogId, newBlog)\r\n      .toPromise()\r\n      .then(response => response as Blog)\r\n      .catch(this.handleError);\r\n  }\r\n  postComment(blogId: string, comment: string): Promise<void | Blog> {\r\n\r\n    return this.http.post(BLOGS_URL + '/' + blogId + '/comment', {comment: comment})\r\n    .toPromise()\r\n    .then(response => response as Blog)\r\n    .catch(this.handleError);\r\n    \r\n  }\r\n\r\n  deleteBlog(blogId: string){\r\n    \r\n    return this.http.delete(BLOGS_URL + '/' + blogId);\r\n   \r\n  }\r\n  // addFavourites(blogId : string, newBlog: Blog): Promise<void | Blog>{\r\n\r\n  //   return this.http.put(BLOGS_URL + '/' + blogId + '/fav', newBlog)\r\n  //   .toPromise()\r\n  //   .then(response => response as Blog)\r\n  //     .catch(this.handleError);\r\n  // }\r\n\r\n\r\n\r\n  createBlogFavourites(newBlog: Blog): Promise<void | Blog> {\r\n    return this.http.post(BLOGS_URL+'/favourites', newBlog)\r\n      .toPromise()\r\n      .then(response => response as Blog)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addToFavourites(userid: string, blogid: string){\r\n    const data = {\r\n      userid, blogid\r\n    }\r\n    return this.http.post(USERS_URL+'/favourites', data)\r\n    .toPromise()\r\n      .then(response => response as any)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getFavourites(userid: string) {\r\n    return this.http.get(USERS_URL+'/favourites/'+userid)\r\n    .toPromise()\r\n    .then((response) =>  response)\r\n    .catch(this.handleError);\r\n  }\r\n\r\n  removeFromFavourites(userid: string, blogid: string){\r\n    // const data = {\r\n    //   userid, blogid\r\n    // }\r\n    // return this.http.delete(USERS_URL+'/favourites', data)\r\n    // .toPromise()\r\n    //   .then(response => response as any)\r\n    //   .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-blog-add-comments',\r\n  templateUrl: './blog-add-comments.component.html',\r\n  styleUrls: ['./blog-add-comments.component.css']\r\n})\r\nexport class BlogAddCommentsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"section\">\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-between section section-examples\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row justify-content-between align-items-center\">\r\n                    <h1>Add comments</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BlogService } from '../../blog.service';\r\nimport { Blog } from '../../models/blog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-blog-create',\r\n  templateUrl: './blog-create.component.html',\r\n  styleUrls: ['./blog-create.component.css'],\r\n  providers: [BlogService]\r\n})\r\nexport class BlogCreateComponent implements OnInit {\r\n\r\n\r\n  public newBlog : Blog;\r\n  formError: string;\r\n\r\n  constructor(private blogservice:BlogService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.newBlog = new Blog();\r\n  }\r\n\r\n\r\n  public createBlog(newBlog: Blog) : void{\r\n    this.blogservice.createBlog(newBlog);\r\n  }\r\n public formIsValid(): boolean { \r\n\r\n    if (this.newBlog.author && this.newBlog.name && this.newBlog.images){\r\n\r\n    return true;\r\n\r\n  } \r\n    else {\r\n\r\n    return false;\r\n\r\n    }\r\n}\r\n\r\npublic onReviewSubmit():void {\r\n\r\nthis.formError = ''; \r\n\r\nif(this.formIsValid()){\r\n\r\n this.formError  = \"Data Submitted Succesfully\";\r\n this.router.navigate([`/`]);\r\n\r\n} else{\r\n\r\n  this.formError = 'All fields are required, Please try again';\r\n\r\n}\r\n\r\n} \r\n\r\n}\r\n\r\n\r\n\r\n","\r\n<div class=\"section\"> \r\n    <div class=\"container\">\r\n\r\n     <div class=\"section\">\r\n<form (ngSubmit)=\"createBlog(newBlog); onReviewSubmit()\" >\r\n\r\n    <div class=\"form-group\">\r\n       <label for=\"name\">Blog Topic Name</label>\r\n       <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Ex. Javascript\" name=\"name\" [(ngModel)]=\"newBlog.name\">\r\n    </div>\r\n    <br>\r\n    <div class=\"form-group\">\r\n       <label for=\"author\">Author</label>\r\n       <input  type=\"text\" class=\"form-control\" id=\"author\" placeholder=\"Ex. Sai Ganesh\" name=\"author\" [(ngModel)]=\"newBlog.author\">\r\n    </div>\r\n    <br>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <textarea class=\"form-control\" id=\"description\" rows=\"5\" placeholder=\"Blog Description\" name =\"description\"[(ngModel)]=\"newBlog.description\"></textarea>\r\n      </div>\r\n      <br>\r\n      <div class=\"form-group\">\r\n        <label for=\"images\">Image URL</label>\r\n        <input class=\"form-control\" type=\"text\" class=\"form-control\" id=\"images\" placeholder=\"Image Url\" name=\"images\" [(ngModel)]=\"newBlog.images\">\r\n     </div>\r\n  \r\n    <div *ngIf=\"formError; else notshow\" class=\"alert alert-info\" role=\"alert\">{{ formError }}</div>\r\n    <ng-template #notshow><div class=\"alert alert-info\" role=\"alert\">Enter all details</div></ng-template>\r\n<div class=\"text-center\">\r\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n   </div>\r\n </form>\r\n     </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { BlogService } from '../../blog.service';\r\nimport { Blog } from '../../models/blog';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { BlogUpdateComponent } from '../blog-update/blog-update.component';\r\n//import { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-blog-details',\r\n  templateUrl: './blog-details.component.html',\r\n  styleUrls: ['./blog-details.component.css'],\r\n  providers: [BlogService, BlogUpdateComponent]\r\n})\r\nexport class BlogDetailsComponent implements OnInit {\r\n\r\n  newBlog: Blog;\r\n  blogid: string;\r\n  newComment: string;\r\n  constructor(private blogService: BlogService, private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.newBlog = new Blog();\r\n\r\n    this.route.params.pipe(switchMap((params: Params) => {\r\n\r\n      return this.blogService.getSingleBlog(params.blogid);\r\n\r\n    }))\r\n      .subscribe((newBlog: Blog) => {\r\n        this.newBlog = newBlog;\r\n\r\n      })\r\n  }\r\n\r\n  updateBlog(blogid: string) {\r\n\r\n    this.router.navigate([\"update-blog\", blogid]);\r\n\r\n  }\r\n\r\n  public postComment(): void {\r\n    let date = new Date();\r\n    this.blogService.postComment(this.newBlog._id, this.newComment)\r\n      .then(response => {\r\n        this.newBlog.comments.push({\r\n          _id: '',\r\n          date: date.toString(),\r\n          description: this.newComment,\r\n          author: \"Anonymous\"\r\n        });\r\n        this.newComment = '';\r\n      });\r\n  }\r\n\r\n  deleteBlog(blogid: string) {\r\n    this.blogService.deleteBlog(blogid).subscribe(\r\n      response => {\r\n        this.router.navigate([`/`]);\r\n      },\r\n      error => console.log(error)\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"section\">\r\n    <div class=\"container\">\r\n\r\n        <br>\r\n        <br>\r\n        <h2>{{ newBlog.name}}</h2>\r\n        <div class=\"row \">\r\n\r\n            <div class=\"col-lg-8\">\r\n                <!-- <div class=\"row justify-content-between align-items-center\">\r\n                    <h1>Selected Blog</h1>\r\n                    <div class=\"format\">\r\n                        <p [ngStyle]=\"{'color':'green'}\">Name : </p>\r\n                        <p [ngStyle]=\"{'color':'blue'}\">Images : {{newBlog.images}}</p>\r\n                        <p [ngStyle]=\"{'color':'red'}\">Description : {{newBlog.description}}</p>\r\n                        <p [ngStyle]=\"{'color':'green'}\">Author : {{newMovie.author}}</p>\r\n                    </div> \r\n                </div> -->\r\n\r\n                <div class=\"blog-post shadow\">\r\n                    <carousel [showIndicators]=\"true\">\r\n                        <slide *ngFor=\"let blogImage of newBlog.images\">\r\n                            <!-- <a [routerLink]=\"['/blogs', blog._id]\"></a> -->\r\n                            <img class=\"img-fluid\" alt=\"{{ newBlog.name }}\" class=\"d-block\" src=\"{{ blogImage }}\" />\r\n\r\n                            <!-- <div class=\"carousel-caption d-none d-md-block\">\r\n                                <h5>{{ blog.name }}</h5>\r\n                            </div> -->\r\n                        </slide>\r\n                    </carousel>\r\n                    <div class=\"blog-post-content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-6\">\r\n                                <br>\r\n                                <br>\r\n                                <h4>{{ newBlog.author }}</h4>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-6\">\r\n\r\n                                <ng-template [ngIf]=\"newBlog.favourites\"> <div  class=\"alert alert-danger\" role=\"alert\">{{newBlog.name}} is your favourites</div>  </ng-template>\r\n                            </div> -->\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n\r\n                <p>{{ newBlog.description }}</p>\r\n                <div class=\"btn-wrapper pt-3\">\r\n                    <!--   <a [routerLink]=\"['/blogs/' + newBlog._id + '/favourites']\"> -->\r\n                    <!-- <a [routerLink]=\"['/books/' + newBook._id + '/review/new']\" class=\"btn btn-primary\">Add Review</a> -->\r\n                    <button class=\"btn btn-simple btn-danger mr-1\" (click)=\"updateBlog(newBlog._id)\">\r\n                        <i class=\"tim-icons icon-pencil\"> </i> Update Blog\r\n                    </button>\r\n\r\n                    <!-- </a> -->\r\n                    <!-- <a [routerLink]=\"['/blogs/' + newBlog._id + '/comments/new']\"> -->\r\n                    <button class=\"btn btn-simple btn-info\" (click)=\"deleteBlog(newBlog._id)\">\r\n                        <i class=\"tim-icons icon-trash-simple\"> </i> Delete Blog\r\n                    </button>\r\n                    <!-- </a> -->\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <div class=\"container\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <h5><small class=\"pull-right\"></small> Comments </h5>\r\n                <div *ngFor=\"let comment of newBlog.comments\">\r\n                    <div class=\"comments-list\">\r\n                        <br>\r\n                        <div class=\"media\">\r\n                            <p class=\"pull-right\"><small></small></p>\r\n                            <a class=\"media-left\" href=\"#\">\r\n                                <!-- <img src=\"http://lorempixel.com/40/40/people/1/\"> -->\r\n                            </a>\r\n                            <div class=\"media-body card card-stats\" style=\"padding: 10px;\">\r\n                                <p>{{comment.description}}</p>\r\n                                <p class=\"media-heading user_name text-muted\"> <i\r\n                                        class=\"tim-icons icon-single-02\"></i><small>{{comment.author}} commented this at\r\n                                        {{comment.date}} </small> </p>\r\n                                <p><small><i class=\"tim-icons icon-heart-2\"></i> Like &nbsp; &nbsp; <i\r\n                                            class=\"tim-icons icon-attach-87\"></i> Share</small></p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- //   <form (ngSubmit)=\"postComment(newBlog)\"> -->\r\n            <div>\r\n\r\n                <div class=\"form-group\" *ngFor=\"let x of newBlog.comments  index as i; first as isLast\">\r\n                    <span *ngIf=\"isLast\"> <label for=\"comdescription\">Post Commment</label>\r\n                        <textarea class=\"form-control\" id=\"newComment\" rows=\"2\" placeholder=\"Comment here\"\r\n                            [(ngModel)]=\"newComment\" name=\"newComment\"></textarea> </span>\r\n                </div>\r\n                <br>\r\n                <div class=\"btn-wrapper pt-3\">\r\n                    <button (click)=\"postComment()\" class=\"btn btn-simple btn-info\">\r\n                        <i class=\"tim-icons icon-pencil\"> </i> Post A Comment\r\n                    </button>\r\n                </div>\r\n                <!-- </form> -->\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Blog } from '../../models/blog';\r\nimport { BlogService } from '../../blog.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-blog-favourites',\r\n  templateUrl: './blog-favourites.component.html',\r\n  styleUrls: ['./blog-favourites.component.css']\r\n})\r\n\r\nexport class BlogFavouritesComponent implements OnInit {\r\n  blogs: Blog[] = [];\r\n  message: string;\r\n  formError: string;\r\n  constructor(private blogService: BlogService, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getFavouriteBlogs();\r\n  }\r\n\r\n  //get favourite blogs based on user id\r\n  private getFavouriteBlogs() {\r\n    this.message = 'Getting your favourite blogs...';\r\n    this.authService.getCurrentUserId()\r\n      .then((userId: string) => {\r\n        this.blogService.getFavourites(userId)\r\n          .then((response: Blog[]) => {\r\n            this.blogs = response;\r\n            this.message = '';\r\n          })\r\n          .catch((error: string) => {\r\n            this.showError(error);\r\n          });\r\n      })\r\n  }\r\n\r\n  private showError(error) {\r\n    this.message = error.message;\r\n  }\r\n}\r\n","<div class=\"section\">\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-12\">\r\n                <h1 class=\"text-center\">Your favourite Blogs</h1>\r\n            </div>\r\n        </div>\r\n        <div *ngFor=\"let blog of blogs\" class=\"row justify-content-between section section-examples\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row justify-content-between align-items-center\">\r\n                    <carousel [showIndicators]=\"true\">\r\n                        <slide *ngFor=\"let blogImage of blog.images\">\r\n                            <a routerLink=\"/blogs/{{blog._id}}\">\r\n\r\n                                <img alt=\"{{ blog.name }}\" class=\"d-block\" src=\"{{ blogImage }}\" />\r\n                            </a>\r\n                            <div class=\"carousel-caption d-none d-md-block\">\r\n                                <h5>{{ blog.name }}</h5>\r\n                            </div>\r\n                        </slide>\r\n                    </carousel>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <h1 class=\"profile-title text-left\"><a routerLink=\"/blogs/{{blog._id}}\">{{ blog.name }}</a></h1>\r\n                <p class=\"profile-description text-left\">\r\n                    {{blog.description}}\r\n                </p>\r\n                <footer class=\"blockquote-footer\">Author: <cite title=\"Source Title\">{{ blog.author }}</cite></footer>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <div class=\"section\">\r\n    <div class=\"container\">\r\n        <div *ngFor=\"let blog of fav\" class=\"row justify-content-between section section-examples\">\r\n            <h1> testing favs in first FOR</h1>\r\n            <h2>{{blog.blogid}}</h2> -->\r\n\r\n<!-- <div *ngFor=\"let list of blog.blogid\" class=\"col-md-6\"> -->\r\n<!-- <div class=\"col-md-5\"> -->\r\n<!-- <h2>{{list.name}}</h2>\r\n                    <h1> testing favs in 2nd For</h1> -->\r\n<!-- </div> -->\r\n<!-- </div> -->\r\n\r\n<!-- <div class=\"col-md-5\">\r\n                <h1 class=\"profile-title text-left\">{{ blog._id }}</h1>\r\n                <p class=\"profile-description text-left\">\r\n                    {{blog.userid}}\r\n                </p>\r\n                <footer class=\"blockquote-footer\">Author: <cite title=\"Source Title\">{{ blog.blogid }}</cite></footer>\r\n                \r\n            </div> -->\r\n<!-- </div>\r\n    </div>\r\n</div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { BlogService } from 'src/app/blog.service';\r\nimport { Blog } from 'src/app/models/blog';\r\nimport { Favourites } from 'src/app/models/favourites';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-blog-list',\r\n  templateUrl: './blog-list.component.html',\r\n  styleUrls: ['./blog-list.component.css']\r\n})\r\n\r\nexport class BlogListComponent implements OnInit {\r\n\r\n  isLoggedIn$: Observable<boolean>;\r\n  blogs: Blog[] = [];\r\n  message: string;\r\n  formError: string;\r\n  constructor(private blogService: BlogService, private userService: UserService, private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn$ = this.authService.isLoggedIn;\r\n    this.getBlogs();\r\n  }\r\n\r\n  private getBlogs() {\r\n    this.message = 'Getting blogs...';\r\n    this.blogService.getBlogs()\r\n      .then((response: Blog[]) => {\r\n        const updatedBlogs: Blog[] = response;\r\n\r\n        //get current user\r\n        this.authService.getCurrentUserId().then((userId: string) => {\r\n          //get user's fav blog\r\n          this.blogService.getFavourites(userId).then((res: Blog[]) => {\r\n            const favBlogs: Blog[] = res;\r\n\r\n            for (var i = 0; i < updatedBlogs.length; i++) {\r\n              for (var k = 0; k < favBlogs.length; k++) {\r\n                if (updatedBlogs[i]._id == favBlogs[k]._id) {\r\n                  updatedBlogs[k].favourites = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            this.blogs = updatedBlogs;\r\n            this.message = '';\r\n          }).catch(err => {\r\n            console.log(\"Error in getFavourites\");\r\n          })\r\n        })\r\n\r\n      })\r\n      .catch((error: string) => {\r\n        this.showError(error);\r\n      });\r\n  }\r\n\r\n  //Add Blog to favorites\r\n  public addFavourites(blogid: string) {\r\n    this.authService.getCurrentUserId()\r\n      .then((userId: string) => {\r\n        this.blogService.addToFavourites(userId, blogid)\r\n          .then((response: any) => {\r\n            alert('Blog Added to Favourites');\r\n            this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n              this.router.navigate(['/blogs']);\r\n            });\r\n          })\r\n          .catch((error: string) => {\r\n            this.showError(error);\r\n          });\r\n      })\r\n      .catch((error: string) => {\r\n        this.showError(\"No user found\");\r\n      })\r\n  }\r\n\r\n  public removeFavourites(blogid: string) {\r\n    // this.authService.getCurrentUserId()\r\n    //   .then((userId: string) => {\r\n    //     this.blogService.removeFromFavourites(userId, blogid)\r\n    //       .then((response: any) => {\r\n    //         alert('Blog Added to Favourites');\r\n    //       })\r\n    //       .catch((error: string) => {\r\n    //         this.showError(error);\r\n    //       });\r\n    //   })\r\n    //   .catch((error: string) => {\r\n    //     this.showError(\"No user found\");\r\n    //   })\r\n  }\r\n\r\n  private showError(error) {\r\n    this.message = error.message;\r\n  }\r\n}\r\n","<div class=\"section\">\r\n    <div class=\"container\">\r\n        <div *ngFor=\"let blog of blogs\" class=\"row justify-content-between section section-examples\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row justify-content-between align-items-center\">\r\n                    <carousel [showIndicators]=\"true\">\r\n                        <slide *ngFor=\"let blogImage of blog.images\">\r\n                            <a routerLink=\"/blogs/{{blog._id}}\">\r\n                               \r\n                                <img alt=\"{{ blog.name }}\" class=\"d-block\" src=\"{{ blogImage }}\" />\r\n                            </a>\r\n                            <div class=\"carousel-caption d-none d-md-block\">\r\n                                <h5>{{ blog.name }}</h5>\r\n                            </div>\r\n                        </slide>\r\n                    </carousel>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <h1 class=\"profile-title text-left\"><a routerLink=\"/blogs/{{blog._id}}\">{{ blog.name }}</a></h1>\r\n                <p class=\"profile-description text-left\">\r\n                    {{blog.description}}\r\n                </p>\r\n                <footer class=\"blockquote-footer\">Author: <cite title=\"Source Title\">{{ blog.author }}</cite></footer>\r\n                <div class=\"btn-wrapper pt-3\">\r\n                    <a (click)=\"addFavourites(blog._id)\" *ngIf=\"isLoggedIn$ | async as isLoggedIn\">\r\n                        <button class=\"btn btn-simple btn-danger mr-1\" *ngIf=\"!blog.favourites\">\r\n                            <i class=\"tim-icons icon-shape-star\"> </i> Add To Favourites\r\n                        </button>\r\n                    </a>\r\n                    <!-- <a (click)=\"removeFavourites(blog._id)\" *ngIf=\"isLoggedIn$ | async as isLoggedIn\">\r\n                        <button class=\"btn btn-simple btn-danger mr-1\" *ngIf=\"blog.favourites\">\r\n                            <i class=\"tim-icons icon-simple-delete\"> </i> Remove From Favourites\r\n                        </button>\r\n                    </a> -->\r\n                    <a [routerLink]=\"['/blogs/' + blog._id]\">\r\n                        <button class=\"btn btn-simple btn-info\">\r\n                            <i class=\"tim-icons icon-pencil\"> </i> Add Comments\r\n                        </button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute ,Params } from '@angular/router';\r\nimport { Blog } from '../../models/blog';\r\nimport {BlogService} from '../../blog.service';\r\nimport { Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-blog-update',\r\n  templateUrl: './blog-update.component.html',\r\n  styleUrls: ['./blog-update.component.css'],\r\n  providers:[BlogService]\r\n})\r\nexport class BlogUpdateComponent implements OnInit {\r\n\r\n  blog: Blog;\r\n  blogid: string;\r\n  formError: string;\r\n\r\n  constructor(private route: ActivatedRoute, private blogService: BlogService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n      this.blog = new Blog();\r\n      // this.blogid = this.route.snapshot.params[\"blogid\"];\r\n\r\n      // this.blogService.getSingleBlog(this.blogid);\r\n\r\n      this.route.params.pipe(\r\n        switchMap((params: Params) => {\r\n          return this.blogService.getSingleBlog(params['blogid'])\r\n        })\r\n        )\r\n        .subscribe((blog: Blog) => {\r\n          this.blog = blog;\r\n          \r\n        });\r\n  }\r\n  updateBlog(blog : Blog){\r\n\r\n    this.blogService.updateBlog(this.blogid,blog);\r\n  }\r\n  public formIsValid(): boolean { \r\n\r\n    if (this.blog.author && this.blog.name && this.blog.images){\r\n\r\n    return true;\r\n\r\n  } \r\n    else {\r\n\r\n    return false;\r\n\r\n    }\r\n}\r\n\r\npublic onReviewSubmit():void {\r\n\r\nthis.formError = ''; \r\n\r\nif(this.formIsValid()){\r\n\r\n this.formError  = \"Data Updated Succesfully\";\r\n this.router.navigate([`/`]);\r\n\r\n} else{\r\n\r\n  this.formError = 'All fields are required, Please try again';\r\n\r\n}\r\n\r\n} \r\n\r\n}\r\n","\r\n<div class=\"section\"> \r\n    <div class=\"container\">\r\n\r\n     <div class=\"section\">\r\n<form (ngSubmit)=\"updateBlog(blog); onReviewSubmit()\" >\r\n\r\n    <div class=\"form-group\">\r\n       <label for=\"name\">Blog Topic Name</label>\r\n       <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"{{blog.name}}\" name=\"name\" [(ngModel)]=\"blog.name\">\r\n    </div>\r\n    <br>\r\n    <div class=\"form-group\">\r\n       <label for=\"author\">Author</label>\r\n       <input  type=\"text\" class=\"form-control\" id=\"author\" placeholder=\"{{blog.author}}\" name=\"author\" [(ngModel)]=\"blog.author\">\r\n    </div>\r\n    <br>\r\n    <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <textarea class=\"form-control\" id=\"description\" rows=\"5\" placeholder=\"{{blog.description}}\" name =\"description\"[(ngModel)]=\"blog.description\"></textarea>\r\n      </div>\r\n      <br>\r\n      <div class=\"form-group\">\r\n        <label for=\"images\">Image URL</label>\r\n        <input class=\"form-control\" type=\"text\" class=\"form-control\" id=\"images\" placeholder=\"{{blog.images}}\" name=\"images\" [(ngModel)]=\"blog.images\">\r\n     </div>\r\n     \r\n  \r\n    <div *ngIf=\"formError; else notshow\" class=\"alert alert-info\" role=\"alert\">{{ formError }}</div>\r\n    <ng-template #notshow><div class=\"alert alert-info\" role=\"alert\">Enter all details</div></ng-template>\r\n    <div class=\"text-center\">\r\n   \r\n    <button type=\"submit\" class=\"btn btn-primary\">Update</button>\r\n    </div>\r\n </form>\r\n \r\n     </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\"><h1 class=\"title\">Blog•</h1></div>\r\n        <div class=\"col-md-3\">\r\n          <!-- <ul class=\"nav\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" [routerLink]=\"['/home']\"> Home </a>\r\n            </li>\r\n          </ul> -->\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <!-- <ul class=\"nav\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" [routerLink]=\"['/contactus']\">\r\n                Contact Us\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" [routerLink]=\"['/aboutus']\">\r\n                About Us\r\n              </a>\r\n            </li>\r\n          </ul> -->\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <h3 class=\"title\">Follow us:</h3>\r\n          <div class=\"btn-wrapper profile\">\r\n            <a\r\n              class=\"btn btn-icon btn-neutral btn-round btn-simple mr-1\"\r\n              href=\"https://twitter.com\"\r\n              target=\"_blank\"\r\n            >\r\n              <i class=\"fab fa-twitter\"> </i>\r\n            </a>\r\n            <a\r\n              class=\"btn btn-icon btn-neutral btn-round btn-simple mr-1\"\r\n              href=\"https://www.facebook.com\"\r\n              target=\"_blank\"\r\n            >\r\n              <i class=\"fab fa-facebook\"> </i>\r\n            </a>\r\n            <a\r\n              class=\"btn btn-icon btn-neutral btn-round btn-simple\"\r\n              href=\"https://dribbble.com\"\r\n              target=\"_blank\"\r\n            >\r\n              <i class=\"fab fa-dribbble\"> </i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>","import { Component, HostListener, Inject, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\n\r\nimport { Location } from \"@angular/common\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-framework',\r\n  templateUrl: './framework.component.html',\r\n  styleUrls: ['./framework.component.css']\r\n})\r\nexport class FrameworkComponent implements OnInit, OnDestroy {\r\n  isCollapsed = true;\r\n  focus;\r\n  focus1;\r\n  focus2;\r\n  date = new Date();\r\n  pagination = 3;\r\n  pagination1 = 1;\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    public location: Location,\r\n    @Inject(DOCUMENT) document\r\n  ) { }\r\n  @HostListener(\"window:scroll\", [\"$event\"])\r\n  scrollToDownload(element: any) {\r\n    // element.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  onWindowScroll(e) {\r\n    if (window.pageYOffset > 100) {\r\n      var element = document.getElementById(\"navbar-top\");\r\n      if (element) {\r\n        element.classList.remove(\"navbar-transparent\");\r\n        element.classList.add(\"bg-danger\");\r\n      }\r\n    } else {\r\n      var element = document.getElementById(\"navbar-top\");\r\n      if (element) {\r\n        element.classList.add(\"navbar-transparent\");\r\n        element.classList.remove(\"bg-danger\");\r\n      }\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.onWindowScroll(event);\r\n    var body = document.getElementsByTagName(\"body\")[0];\r\n    body.classList.add(\"index-page\");\r\n  }\r\n  ngOnDestroy() {\r\n    var body = document.getElementsByTagName(\"body\")[0];\r\n    body.classList.remove(\"index-page\");\r\n  }\r\n}","<app-nav></app-nav>\r\n<div class=\"wrapper\">\r\n    <div class=\"main\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>","import { Component, OnInit, OnDestroy, Renderer2, Inject, HostListener } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: \"app-index\",\r\n  templateUrl: \"index.component.html\"\r\n})\r\nexport class IndexComponent implements OnInit, OnDestroy {\r\n  isCollapsed = true;\r\n  focus;\r\n  focus1;\r\n  focus2;\r\n  date = new Date();\r\n  pagination = 3;\r\n  pagination1 = 1;\r\n\r\n  constructor(private userService: UserService, private renderer: Renderer2,\r\n    public location: Location,\r\n    @Inject(DOCUMENT) document) { }\r\n  @HostListener(\"window:scroll\", [\"$event\"])\r\n\r\n  scrollToDownload(element: any) {\r\n    // element.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  onWindowScroll(e) {\r\n    if (window.pageYOffset > 100) {\r\n      var element = document.getElementById(\"navbar-top\");\r\n      if (element) {\r\n        element.classList.remove(\"navbar-transparent\");\r\n        element.classList.add(\"bg-danger\");\r\n      }\r\n    } else {\r\n      var element = document.getElementById(\"navbar-top\");\r\n      if (element) {\r\n        element.classList.add(\"navbar-transparent\");\r\n        element.classList.remove(\"bg-danger\");\r\n      }\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    var body = document.getElementsByTagName(\"body\")[0];\r\n    body.classList.add(\"index-page\");\r\n    this.getUserinfo();\r\n  }\r\n  ngOnDestroy() {\r\n    var body = document.getElementsByTagName(\"body\")[0];\r\n    body.classList.remove(\"index-page\");\r\n  }\r\n\r\n  getUserinfo() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if(token) {\r\n      this.userService.getUser(token).then((user : any) => {\r\n        if(user) {\r\n          //use this data for user ptofile\r\n          // do not show register and login tab\r\n        } else {\r\n          //show register and login tab\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header header-filter\">\r\n  <div class=\"squares square1\"></div>\r\n  <div class=\"squares square2\"></div>\r\n  <div class=\"squares square3\"></div>\r\n  <div class=\"squares square4\"></div>\r\n  <div class=\"squares square5\"></div>\r\n  <div class=\"squares square6\"></div>\r\n  <div class=\"squares square7\"></div>\r\n  <div class=\"container\">\r\n    <div class=\"content-center brand\">\r\n      <h1 class=\"h1-seo\">Blog•</h1>\r\n      <h3>\r\n        A beautiful website to express your thought and share with others. It's Free to use.\r\n      </h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"main\">\r\n  <app-blog-list></app-blog-list>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { Users } from 'src/app/models/users';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private router: Router, private authService: AuthService) { }\r\n\r\n  formError: String = '';\r\n\r\n  newUser: Users = {\r\n    _id: '',\r\n    name: null,\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogin() {\r\n    this.formError = '';\r\n    if(this.formIsValid()) {\r\n      const res = this.authService.login(this.newUser);\r\n      console.log(res)\r\n      if(res !== null){\r\n        this.formError = res;\r\n      }\r\n    } else {\r\n      this.formError = 'All fields required. Please, try again!';\r\n    }\r\n  }\r\n\r\n  private formIsValid(): boolean {\r\n    if (this.newUser.email && this.newUser.password)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n}\r\n","<app-nav></app-nav>\r\n<div class=\"wrapper\">\r\n    <div class=\"page-header\">\r\n        <div class=\"page-header-image\"></div>\r\n        <div class=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"row\" style=\"justify-content: center;align-content: center;\">\r\n                    <div class=\"col-lg-5 col-md-6 offset-lg-0 offset-md-3\">\r\n                        <div class=\"square square-7\" id=\"square7\"\r\n                            style=\"transform: perspective(500px) rotateY(8.03deg) rotateX(-5.41667deg);\"></div>\r\n                        <div class=\"square square-8\" id=\"square8\"\r\n                            style=\"transform: perspective(500px) rotateY(8.03deg) rotateX(-5.41667deg);\"></div>\r\n                        <div class=\"card card-register\">\r\n                            <div class=\"card-header\"><img alt=\"Card image\" class=\"card-img\"\r\n                                    src=\"assets/img/square1-red.png\">\r\n                                <h4 class=\"card-title\">Login</h4>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <form class=\"form ng-untouched ng-pristine ng-valid\" novalidate=\"\" (ngSubmit)=\"onLogin()\">\r\n                                    <div *ngIf=\"formError\" class=\"alert alert-danger\" role=\"alert\">\r\n                                        {{ formError }}\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\"><i class=\"tim-icons icon-email-85\"></i></div>\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.email\" name=\"email\" class=\"form-control\" placeholder=\"Email\" type=\"email\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\"><i class=\"tim-icons icon-lock-circle\"></i>\r\n                                            </div>\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" type=\"password\">\r\n                                    </div>\r\n                                    <button class=\"btn btn-danger btn-round btn-lg\" type=\"submit\" >Login</button>\r\n                                </form>\r\n                            </div>\r\n                            <div class=\"card-footer\"\r\n                                style=\"display: flex; justify-content: center;align-content: center;\">\r\n                                <p>Don't Have Account? </p>\r\n                                <a routerLink=\"/register\"> Register Here </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"register-bg\"></div>\r\n                <div class=\"square square-1\" id=\"square1\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-2\" id=\"square2\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-3\" id=\"square3\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-4\" id=\"square4\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-5\" id=\"square5\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-6\" id=\"square6\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  isLoggedIn$: Observable<boolean>;    \r\n  userid: string;\r\n  username: string;\r\n  isCollapsed = true;\r\n  focus;\r\n  focus1;\r\n  focus2;\r\n\r\n  constructor(private authService: AuthService, private userService: UserService) { }\r\n  \r\n  ngOnInit() {\r\n    this.isLoggedIn$ = this.authService.isLoggedIn;\r\n    this.getSingleUser().then((data: any) => {\r\n      this.userid = data._id;\r\n      this.username = data.name;\r\n    })\r\n  }\r\n\r\n  onLogout(){\r\n    this.authService.logout();\r\n  }\r\n\r\n  getSingleUser() {\r\n    return new Promise((resolve, reject) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        this.userService.getUser(token)\r\n          .then((user: any) => {\r\n            if (user) {\r\n              resolve(user.data);\r\n            }\r\n          })\r\n          .catch((res) => {\r\n            reject(res);\r\n            return;\r\n          })\r\n      }\r\n    })\r\n  }\r\n}","<nav class=\"navbar navbar-expand-lg fixed-top navbar-transparent\" color-on-scroll=\"100\" id=\"navbar-top\">\r\n  <div class=\"container\">\r\n    <div class=\"navbar-translate\">\r\n      <a class=\"navbar-brand\" placement=\"bottom\" routerLink='/' routerLinkActive=\"active\">\r\n        <span> Blog• </span> Write Your Thoughts\r\n      </a>\r\n      <button aria-controls=\"navigation-index\" aria-label=\"Toggle navigation\" class=\"navbar-toggler navbar-toggler\"\r\n        [attr.aria-expanded]=\"!isCollapsed\" (click)=\"isCollapsed = !isCollapsed\" id=\"navigation\" type=\"button\">\r\n        <span class=\"navbar-toggler-bar bar1\"> </span>\r\n        <span class=\"navbar-toggler-bar bar2\"> </span>\r\n        <span class=\"navbar-toggler-bar bar3\"> </span>\r\n      </button>\r\n    </div>\r\n    <div class=\"navbar-collapse justify-content-end\" [collapse]=\"isCollapsed\" id=\"navigation\">\r\n      <div class=\"navbar-collapse-header\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6 collapse-brand\"><a> Blog </a></div>\r\n          <div class=\"col-6 collapse-close text-right\">\r\n            <button aria-controls=\"navigation-index\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"\r\n              [attr.aria-expanded]=\"!isCollapsed\" (click)=\"isCollapsed = !isCollapsed\" id=\"navigation\" type=\"button\">\r\n              <i class=\"tim-icons icon-simple-remove\"> </i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"isLoggedIn$ | async as isLoggedIn; then loggedIn; else loggedOut\">\r\n      </ng-container>\r\n      <ng-template #loggedIn>\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/blogs/new\">\r\n              <i aria-hidden=\"true\" class=\"tim-icons icon-paper\" tooltip=\"Create Blog\"> </i>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/blogs/favourites\">\r\n              <i aria-hidden=\"true\" class=\"tim-icons icon-shape-star\" tooltip=\"View Favourites\"> </i>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item dropdown\" dropdown>\r\n            <a class=\"nav-link dropdown-toggle dropdown-toggle\" data-toggle=\"dropdown\" dropdownToggle\r\n              href=\"javascript:void(0)\" id=\"navbarDropdownMenuLink\">\r\n              <i aria-hidden=\"true\" class=\"tim-icons icon-settings-gear-63\">\r\n              </i>\r\n            </a>\r\n            <div aria-labelledby=\"navbarDropdownMenuLink\" class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\r\n              <a class=\"dropdown-item\" href=\"javascript:void(0)\">\r\n                <p class=\"text-info\">{{username}}</p>\r\n              </a>\r\n              <div class=\"divider\"></div>\r\n              <a class=\"dropdown-item\" [routerLink]=\"['/update/'+userid]\">\r\n                Profile\r\n              </a>\r\n              <a class=\"dropdown-item\" style=\"cursor: pointer;\" (click)=\"onLogout()\">\r\n                Logout\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </ng-template>\r\n      <ng-template #loggedOut>\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\">\r\n              <i aria-hidden=\"true\" class=\"fas fa-sign-in-alt\"> Sign In </i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Users } from 'src/app/models/users';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.css']\r\n})\r\nexport class RegisterPageComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  formError: String = '';\r\n\r\n  newUser: Users = {\r\n    _id: '',\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegister() {\r\n    this.formError = '';\r\n    if(this.formIsValid()) {\r\n      this.userService.registerUser(this.newUser)\r\n        .then((user: any) => {\r\n          if(user){\r\n            if(user.status === \"ok\") {\r\n              \r\n              this.router.navigate([`/update/${user.data._id}`])\r\n\r\n            } else if(user.status === \"error\"){\r\n\r\n              this.formError = user.error;\r\n              \r\n            }\r\n          } else {\r\n            this.formError = 'Ops, something went wrong. Please, try later!';\r\n          }\r\n\r\n        });\r\n    } else {\r\n      this.formError = 'All fields required. Please, try again!';\r\n    }\r\n  }\r\n\r\n  private formIsValid(): boolean {\r\n    if (this.newUser.name && this.newUser.email && this.newUser.password)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n}\r\n","<app-nav></app-nav>\r\n<div class=\"wrapper\">\r\n    <div class=\"page-header\">\r\n        <div class=\"page-header-image\"></div>\r\n        <div class=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"row\" style=\"justify-content: center;align-content: center;\">\r\n                    <div class=\"col-lg-5 col-md-6 offset-lg-0 offset-md-3\">\r\n                        <div class=\"square square-7\" id=\"square7\"\r\n                            style=\"transform: perspective(500px) rotateY(8.03deg) rotateX(-5.41667deg);\"></div>\r\n                        <div class=\"square square-8\" id=\"square8\"\r\n                            style=\"transform: perspective(500px) rotateY(8.03deg) rotateX(-5.41667deg);\"></div>\r\n                        <div class=\"card card-register\">\r\n                            <div class=\"card-header\"><img alt=\"Card image\" class=\"card-img\"\r\n                                    src=\"assets/img/square1-red.png\">\r\n                                <h4 class=\"card-title\">Register</h4>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <form class=\"form ng-untouched ng-pristine ng-valid\" novalidate=\"\"\r\n                                    (ngSubmit)=\"onRegister()\">\r\n                                    <div *ngIf=\"formError\" class=\"alert alert-danger\" role=\"alert\">\r\n                                        {{ formError }}\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\"><i class=\"tim-icons icon-single-02\"></i></div>\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.name\" name=\"name\"\r\n                                            class=\"form-control\" placeholder=\"Full Name\" type=\"text\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\"><i class=\"tim-icons icon-email-85\"></i></div>\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.email\" name=\"email\"\r\n                                            class=\"form-control\" placeholder=\"Email\" type=\"email\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                            <div class=\"input-group-text\"><i class=\"tim-icons icon-lock-circle\"></i>\r\n                                            </div>\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.password\" name=\"password\"\r\n                                            class=\"form-control\" placeholder=\"Password\" type=\"password\">\r\n                                    </div>\r\n                                    <div class=\"form-check text-left\">\r\n                                        <label class=\"form-check-label\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\"><span\r\n                                                class=\"form-check-sign\"></span> I agree to the <a\r\n                                                href=\"javascript:void(0)\"> terms and conditions </a> .\r\n                                        </label>\r\n                                    </div>\r\n                                    <button class=\"btn btn-danger btn-round btn-lg\" type=\"submit\">Register</button>\r\n                                </form>\r\n                            </div>\r\n                            <div class=\"card-footer\"\r\n                                style=\"display: flex; justify-content: center;align-content: center;\">\r\n                                <p>Already Have Account? </p>\r\n                                <a routerLink=\"/login\"> Login Here </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"register-bg\"></div>\r\n                <div class=\"square square-1\" id=\"square1\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-2\" id=\"square2\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-3\" id=\"square3\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-4\" id=\"square4\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-5\" id=\"square5\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-6\" id=\"square6\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>search works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserDetails } from 'src/app/models/user-details';\r\nimport { UserService } from 'src/app/user.service';\r\n\r\n@Component({\r\n  selector: 'app-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n  styleUrls: ['./update-profile.component.css']\r\n})\r\nexport class UpdateProfileComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  formError: String = '';\r\n\r\n  newUser: UserDetails = {\r\n    _id: this.route.snapshot.paramMap.get('userid'),\r\n    dob: '',\r\n    address: '',\r\n    city: '',\r\n    province: '',\r\n    zipcode: '',\r\n    phone: '',\r\n    image: null\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentUser().then((data:any) => {\r\n      this.newUser = data;\r\n    })\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return new Promise((resolve, reject) => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        this.userService.getUser(token)\r\n          .then((user: any) => {\r\n            if (user) {\r\n              resolve(user.data);\r\n            }\r\n          })\r\n          .catch((res) => {\r\n            reject(res);\r\n            return;\r\n          })\r\n      }\r\n    })\r\n  }\r\n\r\n  onUpdate() {\r\n    this.formError = '';\r\n    if(this.formIsValid()) {\r\n      this.userService.updateUser(this.newUser)\r\n        .then((user: any) => {\r\n          if(user){\r\n            if(user.status === \"ok\") {\r\n              \r\n              this.router.navigate([`/`]);\r\n\r\n            } else if(user.status === \"error\"){\r\n\r\n              this.formError = user.error;\r\n            \r\n            }\r\n          } else {\r\n            this.formError = 'Ops, something went wrong. Please, try later!';\r\n          }\r\n\r\n        });\r\n    } else {\r\n      this.formError = 'All fields required. Please, try again!';\r\n    }\r\n  }\r\n\r\n  private formIsValid(): boolean {\r\n    if (this.newUser.dob && this.newUser.address && this.newUser.city \r\n      && this.newUser.province && this.newUser.zipcode && this.newUser.phone)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n}\r\n","<app-nav></app-nav>\r\n<div class=\"wrapper\">\r\n    <div class=\"page-header\">\r\n        <div class=\"page-header-image\"></div>\r\n        <div class=\"content\">\r\n            <div class=\"container\">\r\n                <div class=\"row\" style=\"justify-content: center;align-content: center;\">\r\n                    <div class=\"col-lg-5 col-md-6 offset-lg-0 offset-md-3\">\r\n                        <div class=\"square square-7\" id=\"square7\"\r\n                            style=\"transform: perspective(500px) rotateY(8.03deg) rotateX(-5.41667deg);\"></div>\r\n                        <div class=\"square square-8\" id=\"square8\"\r\n                            style=\"transform: perspective(500px) rotateY(8.03deg) rotateX(-5.41667deg);\"></div>\r\n                        <div class=\"card card-register\">\r\n                            <div class=\"card-header\"><img alt=\"Card image\" class=\"card-img\"\r\n                                    src=\"assets/img/square1-red.png\">\r\n                                <h4 class=\"card-title\">Update</h4>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <form class=\"form ng-untouched ng-pristine ng-valid\" novalidate=\"\" (ngSubmit)=\"onUpdate()\">\r\n                                    <div *ngIf=\"formError\" class=\"alert alert-danger\" role=\"alert\">\r\n                                        {{ formError }}\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.dob\" name=\"dob\" class=\"form-control\" placeholder=\"Date of Birth\" type=\"date\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.address\" name=\"address\" class=\"form-control\" placeholder=\"Address\" type=\"text\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.city\" name=\"city\" class=\"form-control\" placeholder=\"City\" type=\"text\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.province\" name=\"province\" class=\"form-control\" placeholder=\"Province\" type=\"text\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.zipcode\" name=\"zipcode\" class=\"form-control\" placeholder=\"Zipcode\">\r\n                                    </div>\r\n                                    <div class=\"input-group\">\r\n                                        <div class=\"input-group-prepend\">\r\n                                        </div><input autocomplete=\"off\" [(ngModel)]=\"newUser.phone\" name=\"phone\" class=\"form-control\" placeholder=\"Phone\" type=\"number\">\r\n                                    </div>\r\n                                    \r\n                                    <button class=\"btn btn-danger btn-round btn-lg\" type=\"submit\" >Update</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"register-bg\"></div>\r\n                <div class=\"square square-1\" id=\"square1\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-2\" id=\"square2\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-3\" id=\"square3\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-4\" id=\"square4\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-5\" id=\"square5\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n                <div class=\"square square-6\" id=\"square6\"\r\n                    style=\"transform: perspective(500px) rotateY(20.075deg) rotateX(-13.5417deg);\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export const BASEURL = //`https://blog-grp-prj-v1.herokuapp.com/`;\r\n`http://localhost:3000`;\r\n\r\nexport const API_BASE_URL = `${BASEURL}/api`;  \r\nexport const BLOGS_URL = `${API_BASE_URL}/blogs`;\r\nexport const USERS_URL = `${BASEURL}/users`;","import { Comments } from './comments';\r\n\r\nexport class Blog {\r\n    _id: string;\r\n    name: string;\r\n    description: string;\r\n    images: [];\r\n    author: string;\r\n    favourites: boolean;\r\n    comments: [Comments];\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'search'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n  transform(value: any, input: string) {\r\n    if (input) {\r\n      input = input.toLowerCase();\r\n      return value.filter(function (el: any) {\r\n        return el.toLowerCase().indexOf(input) > -1;\r\n      })\r\n    }\r\n    return value;\r\n  }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserDetails } from './models/user-details';\r\nimport { Users } from './models/users';\r\n\r\nimport { BASEURL } from './global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  registerUser(newUser: Users) {\r\n    const url = `${BASEURL}/users/create`;\r\n    return this.http.post(url, newUser)\r\n      .toPromise()\r\n      .then(function(response) {\r\n        return response;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  updateUser(newUser: UserDetails) {\r\n    const url = `${BASEURL}/users/update/${newUser._id}`;\r\n    return this.http.put(url, newUser)\r\n      .toPromise()\r\n      .then(function(response) {\r\n        return response;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  login(newUser: Users) {\r\n    const url = `${BASEURL}/users/login`;\r\n    return this.http.post(url, newUser)\r\n      .toPromise()\r\n      .then(function(response) {\r\n        return response;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getUser(token: any) {\r\n    const url = `${BASEURL}/users/${token}`;\r\n    return this.http.get(url)\r\n      .toPromise()\r\n      .then(function(response) {\r\n        return response;\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error) {\r\n    console.log(error);\r\n  }\r\n\r\n  constructor(private http : HttpClient) { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}